package org.example;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class KnapsackGUI {
    private JPanel panel1; // Główny panel aplikacji
    private JTextField numItemsField; // Pole tekstowe do wprowadzenia liczby przedmiotów
    private JTextField capacityField; // Pole tekstowe do wprowadzenia pojemności plecaka
    private JButton solveButton; // Przycisk do rozwiązania problemu plecakowego
    private JTextArea resultArea; // Obszar tekstowy do wyświetlania wyników
    private JTextArea allItemsArea; // Obszar tekstowy do wyświetlania wszystkich przedmiotów
    private JTextField seedField;


    public KnapsackGUI() {
        // Dodanie akcji do przycisku solveButton
        solveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    // Pobranie liczby przedmiotów z pola tekstowego
                    int numItems = Integer.parseInt(numItemsField.getText());
                    // Pobranie pojemności plecaka z pola tekstowego
                    int capacity = Integer.parseInt(capacityField.getText());
                    // Pobranie seed plecaka z pola tekstowego
                    int seed = Integer.parseInt(seedField.getText());
                    // Utworzenie nowego problemu plecakowego z określonymi parametrami
                    Problem problem = new Problem(numItems, seed, 1, 10);
                    // Wyświetlenie wszystkich wygenerowanych przedmiotów w allItemsArea
                    allItemsArea.setText(problem.toString());
                    // Rozwiązanie problemu plecakowego dla danej pojemności
                    Problem.Result result = problem.solve(capacity);
                    // Wyświetlenie wybranych przedmiotów i wyników w resultArea
                    resultArea.setText(result.toString());
                } catch (NumberFormatException ex) {
                    // Wyświetlenie komunikatu o błędzie, jeśli wprowadzono nieprawidłowe dane
                    resultArea.setText("Please enter valid numbers.");
                }
            }
        });
    }

    public static void main(String[] args) {
        // Utworzenie głównego okna aplikacji
        JFrame frame = new JFrame("KnapsackGUI");
        // Ustawienie głównego panelu aplikacji jako zawartości okna
        frame.setContentPane(new KnapsackGUI().panel1);
        // Ustawienie akcji zamknięcia okna
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // Dopasowanie rozmiaru okna do zawartości
        frame.pack();
        // Ustawienie okna na widoczne
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(8, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Number of items:");
        panel1.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        numItemsField = new JTextField();
        numItemsField.setText("");
        panel1.add(numItemsField, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Capacity:");
        panel1.add(label2, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        capacityField = new JTextField();
        capacityField.setText("");
        panel1.add(capacityField, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Seed:");
        panel1.add(label3, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        seedField = new JTextField();
        seedField.setText("");
        panel1.add(seedField, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        solveButton = new JButton();
        solveButton.setText("START");
        panel1.add(solveButton, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        resultArea = new JTextArea();
        resultArea.setEditable(false);
        resultArea.setEnabled(true);
        resultArea.setText("");
        resultArea.setVerifyInputWhenFocusTarget(true);
        panel1.add(resultArea, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 8, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(7, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        allItemsArea = new JTextArea();
        allItemsArea.setEditable(false);
        allItemsArea.setEnabled(true);
        allItemsArea.setVerifyInputWhenFocusTarget(true);
        scrollPane1.setViewportView(allItemsArea);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}

